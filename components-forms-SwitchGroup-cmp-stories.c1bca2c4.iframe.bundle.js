"use strict";(self.webpackChunk_aleph_front_core=self.webpackChunk_aleph_front_core||[]).push([[4901],{"./src/components/forms/SwitchGroup/cmp.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Default:()=>Default,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var styled_components__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./node_modules/styled-components/dist/styled-components.browser.esm.js"),react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),_cmp__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./src/components/forms/SwitchGroup/cmp.tsx"),_Switch_cmp__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./src/components/forms/Switch/cmp.tsx"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/react/jsx-runtime.js");const __WEBPACK_DEFAULT_EXPORT__={title:"Components/UI/forms/SwitchGroup",component:_cmp__WEBPACK_IMPORTED_MODULE_1__.Z,subcomponents:{Switch:_Switch_cmp__WEBPACK_IMPORTED_MODULE_2__.Z}},defaultArgs={label:"Select an option",error:void 0,direction:"row",value:["1","2"]},Default=(args=>{const options=(0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)((()=>[["1","Option 1"],["2","Option 2"],["3","Option 3"]]),[]),[selectedIds,setSelectedIds]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(new Set(args.value)),handleChange=(0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(((event,groupValue)=>{setSelectedIds(new Set(groupValue))}),[setSelectedIds]),selectedOption=(0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)((()=>options.filter((([k])=>selectedIds.has(k)))),[options,selectedIds]);return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.Fragment,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_cmp__WEBPACK_IMPORTED_MODULE_1__.Z,{...args,name:args.name,onChange:handleChange,children:options.map((opt=>{const[id,label]=opt;return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_Switch_cmp__WEBPACK_IMPORTED_MODULE_2__.Z,{label,value:id},id)}))}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_StyledH,{children:"value:"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)("pre",{children:JSON.stringify(selectedOption,null,2)})]})}).bind({});Default.args={...defaultArgs},Default.parameters={controls:{exclude:["color","size"]}},Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:"args => {\n  const options: [string, string][] = useMemo(() => [['1', 'Option 1'], ['2', 'Option 2'], ['3', 'Option 3']], []);\n  const [selectedIds, setSelectedIds] = useState<Set<SwitchGroupValue>>(new Set((args.value as string[])));\n  const handleChange = useCallback((event: ChangeEvent<HTMLInputElement>, groupValue: SwitchGroupValue[]) => {\n    setSelectedIds(new Set(groupValue));\n  }, [setSelectedIds]);\n  const selectedOption = useMemo(() => options.filter(([k]) => selectedIds.has(k)), [options, selectedIds]);\n  return <>\n      <SwitchGroup {...args} name={args.name} onChange={handleChange}>\n        {options.map(opt => {\n        const [id, label] = opt;\n        return <Switch key={id} label={label} value={id} />;\n      })}\n      </SwitchGroup>\n      <h6 tw=\"my-5\">value:</h6>\n      <pre>{JSON.stringify(selectedOption, null, 2)}</pre>\n    </>;\n}",...Default.parameters?.docs?.source}}};var _StyledH=(0,styled_components__WEBPACK_IMPORTED_MODULE_4__.ZP)("h6").withConfig({displayName:"cmpstories___StyledH",componentId:"sc-1hvos4o-0"})({marginTop:"1.25rem",marginBottom:"1.25rem"});const __namedExportsOrder=["Default"]}}]);