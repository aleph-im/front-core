"use strict";(self.webpackChunk_aleph_front_core=self.webpackChunk_aleph_front_core||[]).push([[7868],{"./src/components/forms/Switch/cmp.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Default:()=>Default,Disabled:()=>Disabled,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var styled_components__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/styled-components/dist/styled-components.browser.esm.js"),react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),_cmp__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./src/components/forms/Switch/cmp.tsx"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/react/jsx-runtime.js");const __WEBPACK_DEFAULT_EXPORT__={title:"Components/UI/forms/Switch",component:_cmp__WEBPACK_IMPORTED_MODULE_1__.Z},defaultArgs={name:"name"},defaultParams={controls:{exclude:["color","size"]}},Template=args=>{const options=(0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)((()=>[["1","Option 1"],["2","Option 2"],["3","Option 3"]]),[]),[selectedIds,setSelectedIds]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(new Set(options[0][0])),handleChange=(0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)((event=>{const id=event.target.value;selectedIds.has(id)?selectedIds.delete(id):selectedIds.add(id),setSelectedIds(new Set(selectedIds))}),[selectedIds,setSelectedIds]),selectedOptions=(0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)((()=>Object.fromEntries(options.filter((([k])=>selectedIds.has(k))))),[options,selectedIds]);return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.Fragment,{children:[options.map((opt=>{const[id,label]=opt;return(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(_StyledSwitch,{...args,key:id,label,value:id,defaultChecked:selectedIds.has(id),onChange:handleChange})})),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_StyledH,{children:"value:"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)("pre",{children:JSON.stringify(selectedOptions,null,2)})]})},Default=Template.bind({});Default.args={...defaultArgs},Default.parameters={...defaultParams};const Disabled=Template.bind({});Disabled.args={...defaultArgs,disabled:!0},Disabled.parameters={...defaultParams},Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:"args => {\n  const options: [string, string][] = useMemo(() => [['1', 'Option 1'], ['2', 'Option 2'], ['3', 'Option 3']], []);\n  const [selectedIds, setSelectedIds] = useState<Set<string>>(new Set(options[0][0]));\n  const handleChange = useCallback((event: ChangeEvent<HTMLInputElement>) => {\n    const id = event.target.value;\n    selectedIds.has(id) ? selectedIds.delete(id) : selectedIds.add(id);\n    setSelectedIds(new Set(selectedIds));\n  }, [selectedIds, setSelectedIds]);\n  const selectedOptions = useMemo(() => Object.fromEntries(options.filter(([k]) => selectedIds.has(k))), [options, selectedIds]);\n  return <>\n      {options.map(opt => {\n      const [id, label] = opt;\n      return <Switch {...args} key={id} label={label} value={id} defaultChecked={selectedIds.has(id)} onChange={handleChange} tw=\"mb-5\" />;\n    })}\n      <h6 tw=\"my-5\">value:</h6>\n      <pre>{JSON.stringify(selectedOptions, null, 2)}</pre>\n    </>;\n}",...Default.parameters?.docs?.source}}},Disabled.parameters={...Disabled.parameters,docs:{...Disabled.parameters?.docs,source:{originalSource:"args => {\n  const options: [string, string][] = useMemo(() => [['1', 'Option 1'], ['2', 'Option 2'], ['3', 'Option 3']], []);\n  const [selectedIds, setSelectedIds] = useState<Set<string>>(new Set(options[0][0]));\n  const handleChange = useCallback((event: ChangeEvent<HTMLInputElement>) => {\n    const id = event.target.value;\n    selectedIds.has(id) ? selectedIds.delete(id) : selectedIds.add(id);\n    setSelectedIds(new Set(selectedIds));\n  }, [selectedIds, setSelectedIds]);\n  const selectedOptions = useMemo(() => Object.fromEntries(options.filter(([k]) => selectedIds.has(k))), [options, selectedIds]);\n  return <>\n      {options.map(opt => {\n      const [id, label] = opt;\n      return <Switch {...args} key={id} label={label} value={id} defaultChecked={selectedIds.has(id)} onChange={handleChange} tw=\"mb-5\" />;\n    })}\n      <h6 tw=\"my-5\">value:</h6>\n      <pre>{JSON.stringify(selectedOptions, null, 2)}</pre>\n    </>;\n}",...Disabled.parameters?.docs?.source}}};var _StyledSwitch=(0,styled_components__WEBPACK_IMPORTED_MODULE_3__.ZP)(_cmp__WEBPACK_IMPORTED_MODULE_1__.Z)({marginBottom:"1.25rem"}),_StyledH=(0,styled_components__WEBPACK_IMPORTED_MODULE_3__.ZP)("h6").withConfig({displayName:"cmpstories___StyledH",componentId:"sc-18kj62x-0"})({marginTop:"1.25rem",marginBottom:"1.25rem"});const __namedExportsOrder=["Default","Disabled"]}}]);